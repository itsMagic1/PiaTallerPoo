/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Sistema_Registros_Mascotas;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.ButtonGroup;
import javax.swing.JOptionPane;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.Document;
import javax.swing.text.JTextComponent;

/**
 *
 * @author LENOVO
 */
public class Registro_De_Mascotas extends javax.swing.JFrame {

   ButtonGroup btnGr;
    public Registro_De_Mascotas() {
        initComponents();
         btnGr = new ButtonGroup();
        btnGr.add(rbPerro);
        btnGr.add(rbGato);
       txtidraza.setVisible(false);
       txtidu.setVisible(false);
  
        
             
    }

     private void cargarTabla() {
        DefaultTableModel modeloTabla = (DefaultTableModel) TblRazas.getModel();
        modeloTabla.setRowCount(0);
        PreparedStatement ps1;
        
        ResultSet rs;
       
        try {
            Connection con = conexion.getconexion();
            ps1 = con.prepareStatement("SELECT*FROM Raza_Perros WHERE Raza_Perro LIKE?");
              ps1.setString(1, "%" +txtBRazas.getText() + "%");
            rs = ps1.executeQuery();
          
            
             
            
            while (rs.next()) {
                 
                
                
                Object[] fila = new Object[5]; 
           
            fila[0] = rs.getObject("ID_Raza_Perros");
             fila[1] = rs.getObject("Raza_Perro");
                
                



                modeloTabla.addRow(fila);
                
                
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e.toString());
        }
         
        
    }
    
    private void cargarTablaGatos(){
        
        
         DefaultTableModel modeloTabla = (DefaultTableModel) TblRazas.getModel();
        modeloTabla.setRowCount(0);
        PreparedStatement ps;
        
        ResultSet rs;
       
        try {
            Connection con = conexion.getconexion();
            ps = con.prepareStatement("SELECT*FROM Raza_Gatos WHERE Raza_Gatos LIKE ? ");
              ps.setString(1, "%" +txtBRazas.getText() + "%");
            rs = ps.executeQuery();
          
            
             
            
            while (rs.next()) {
                 
                
                
                Object[] fila = new Object[5]; 
            fila[0] = rs.getObject("ID_Raza_Gatos");
             fila[1] = rs.getObject("Raza_Gatos");
           
                
                



                modeloTabla.addRow(fila);
                
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e.toString());
        }
    }
    
    
    
    
    
    
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        rbPerro = new javax.swing.JRadioButton();
        rbGato = new javax.swing.JRadioButton();
        jLabel3 = new javax.swing.JLabel();
        txtIDu = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtBRazas = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtNomM = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtcolorM = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtAtenciones = new javax.swing.JTextArea();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtSeñas = new javax.swing.JTextArea();
        txtidu = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtRaza = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        TblRazas = new javax.swing.JTable();
        txtidraza = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Registro de mascotas", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 2, 14))); // NOI18N

        jLabel1.setFont(new java.awt.Font("Arial", 2, 12)); // NOI18N
        jLabel1.setText("Selecciona tu mascota :D");

        rbPerro.setFont(new java.awt.Font("Arial", 2, 12)); // NOI18N
        rbPerro.setText("Perro");
        rbPerro.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                rbPerroMouseClicked(evt);
            }
        });

        rbGato.setFont(new java.awt.Font("Arial", 2, 12)); // NOI18N
        rbGato.setText("Gato");
        rbGato.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                rbGatoMouseClicked(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Arial", 2, 12)); // NOI18N
        jLabel3.setText("Ingresa el ID del Dueño de la mascota");

        jLabel4.setFont(new java.awt.Font("Arial", 2, 12)); // NOI18N
        jLabel4.setText("Selecciona la Raza");

        jLabel9.setFont(new java.awt.Font("Arial", 2, 12)); // NOI18N
        jLabel9.setText("Busqueda razas:");

        jLabel2.setFont(new java.awt.Font("Arial", 2, 12)); // NOI18N
        jLabel2.setText("Nombre de la mascota");

        jLabel5.setFont(new java.awt.Font("Arial", 2, 12)); // NOI18N
        jLabel5.setText("Color de tu mascota");

        jLabel6.setFont(new java.awt.Font("Arial", 2, 12)); // NOI18N
        jLabel6.setText("¿Requiere atenciones especiales?");

        txtAtenciones.setColumns(20);
        txtAtenciones.setRows(5);
        jScrollPane2.setViewportView(txtAtenciones);

        jLabel7.setFont(new java.awt.Font("Arial", 2, 12)); // NOI18N
        jLabel7.setText("Señales particulares");

        txtSeñas.setColumns(20);
        txtSeñas.setRows(5);
        jScrollPane3.setViewportView(txtSeñas);

        jLabel8.setFont(new java.awt.Font("Arial", 2, 12)); // NOI18N
        jLabel8.setText("Raza Seleccionada:");

        txtRaza.setEditable(false);

        TblRazas.setBackground(new java.awt.Color(255, 255, 204));
        TblRazas.setBorder(javax.swing.BorderFactory.createCompoundBorder());
        TblRazas.setFont(new java.awt.Font("Arial", 2, 12)); // NOI18N
        TblRazas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "ID_Raza", "Raza"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TblRazas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TblRazasMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(TblRazas);
        if (TblRazas.getColumnModel().getColumnCount() > 0) {
            TblRazas.getColumnModel().getColumn(0).setPreferredWidth(10);
        }

        txtidraza.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtidrazaActionPerformed(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Arial", 2, 12)); // NOI18N
        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/cargar.jpg"))); // NOI18N
        jButton3.setText("cargar datos");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/MP.png"))); // NOI18N
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton4.setFont(new java.awt.Font("Arial", 2, 12)); // NOI18N
        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/modificar.png"))); // NOI18N
        jButton4.setText("Modificar");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Arial", 2, 12)); // NOI18N
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/guardar.png"))); // NOI18N
        jButton1.setText("Guardar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/limpiar.png"))); // NOI18N
        jButton2.setText("Limpiar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(txtidu, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtidraza, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(25, 25, 25))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jButton2)
                                .addComponent(jButton3))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(rbPerro)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(rbGato))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtIDu, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2)
                                    .addComponent(txtNomM, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(167, 167, 167)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel9)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(txtBRazas, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel8)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtRaza, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(0, 54, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel4)
                        .addGap(100, 100, 100))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton4)
                        .addGap(0, 0, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(txtcolorM, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton5)))
                .addGap(24, 24, 24))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton5)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(rbPerro)
                                    .addComponent(rbGato))))
                        .addGap(14, 14, 14)
                        .addComponent(jLabel4))
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(txtBRazas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtIDu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(13, 13, 13)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(txtRaza, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtNomM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(3, 3, 3)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtcolorM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel6)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtidu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtidraza, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(34, 34, 34)
                        .addComponent(jButton3)
                        .addGap(18, 18, 18)
                        .addComponent(jButton2)))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton4))
                .addContainerGap(99, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // Declarar los DocumentListener para cada tipo de tabla
private DocumentListener perroDocumentListener = new DocumentListener() {
    @Override
    public void insertUpdate(DocumentEvent e) {
        cargarTabla(); // Método para ejecutar la búsqueda
    }

    @Override
    public void removeUpdate(DocumentEvent e) {
        cargarTabla(); // Método para ejecutar la búsqueda
    }

    @Override
    public void changedUpdate(DocumentEvent e) {
        cargarTabla(); // Método para ejecutar la búsqueda
    }
};

private DocumentListener gatoDocumentListener = new DocumentListener() {
    @Override
    public void insertUpdate(DocumentEvent e) {
        cargarTablaGatos(); // Método para ejecutar la búsqueda
    }

    @Override
    public void removeUpdate(DocumentEvent e) {
        cargarTablaGatos(); // Método para ejecutar la búsqueda
    }

    @Override
    public void changedUpdate(DocumentEvent e) {
        cargarTablaGatos(); // Método para ejecutar la búsqueda
    }
};
    
    
    
    private void rbPerroMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rbPerroMouseClicked
      cargarTabla();
     
     
    
    // Remover el DocumentListener asociado a gatos
    txtBRazas.getDocument().removeDocumentListener(gatoDocumentListener);
    // Agregar el DocumentListener asociado a perros
    txtBRazas.getDocument().addDocumentListener(perroDocumentListener);

    }//GEN-LAST:event_rbPerroMouseClicked

    private void rbGatoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rbGatoMouseClicked
       cargarTablaGatos();
       
    // Remover el DocumentListener asociado a perros
    txtBRazas.getDocument().removeDocumentListener(perroDocumentListener);
    // Agregar el DocumentListener asociado a gatos
    txtBRazas.getDocument().addDocumentListener(gatoDocumentListener);
        
    }//GEN-LAST:event_rbGatoMouseClicked
// Método para eliminar un DocumentListener de un JTextComponent dado

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
 String [] opciones = { "Si,estoy seguro", " No", "Cancelar" };
 

String Nombre = txtNomM.getText();

int Seleccion = JOptionPane.showOptionDialog (null, " Estas seguro de querer almacenar el registro de "+Nombre+" ?,!Recuerda revisar los bien los datos :D!", "Selecciona una opcion", JOptionPane.YES_NO_CANCEL_OPTION, JOptionPane.INFORMATION_MESSAGE, null/*icono*/, opciones, opciones[0]);
       
        if (Seleccion==0){
        int IDT=0;
        
        String IDu = txtIDu.getText();
        String Colorm =txtcolorM.getText();
        
        
        String IdR=txtidraza.getText();
          
        
       
        String IDP=null;
        String IDG=null;
         
        if (rbPerro.isSelected() == true) {
           IDT=1;
           
        IDP = IdR;
        IDG=null;
           
        } else if (rbGato.isSelected() == true) {
            IDT=2;
            IDP=null;
            IDG=IdR;
        } else {
            IDT=1;
            IDP = IdR;
        IDG=null;
        }
        String Atenciones=txtAtenciones.getText();
        String senales=txtSeñas.getText();
       
        
      
    Connection con = conexion.getconexion();
        try (PreparedStatement ps = con.prepareStatement("INSERT INTO Datos_Mascotas (Nombre_Mascota,ID_TMascota,ID_RazaP,ID_RazaG,ID_Dueño_De_Mascota,Color_Mascota,Atencion_Especial,Señales_Particulares) VALUES (?,?,?,?,?,?,?,?)", PreparedStatement.RETURN_GENERATED_KEYS)){
        
            
            ps.setString(1, Nombre);
              ps.setInt(2, IDT);
                ps.setString(3, IDP);
                  ps.setString(4, IDG);
                    ps.setString(5, IDu);
                      ps.setString(6, Colorm);
                        ps.setString(7, Atenciones);
                        ps.setString(8, senales);
           
            ps.executeUpdate();
            JOptionPane.showMessageDialog(null, "Registro guardado :D");
            
            int idus;
                try (ResultSet rs = ps.getGeneratedKeys()) {
                    if (rs.next()) {
                        idus = rs.getInt(1);
                    } else {
                        throw new SQLException("No se pudo obtener el ID del préstamo insertado.");
                    }
                }
               
           JOptionPane.showMessageDialog(null, "El ID de tu mascota es: "+idus+"");
  limpiar();
                    
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e.toString());
            
        }
        
        }else{
            JOptionPane.showMessageDialog(null, "Operacion cancelada");
            
        }     
    }//GEN-LAST:event_jButton1ActionPerformed
 private void limpiar() {
        
        txtNomM.setText("");
       txtIDu.setText("");
        txtcolorM.setText("");
        btnGr.clearSelection();
      
       txtAtenciones.setText("");
        txtSeñas.setText("");
        txtBRazas.setText("");
        txtidraza.setText("");
        txtRaza.setText("");
        
        
    }
    private void TblRazasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TblRazasMouseClicked
     int fila = TblRazas.getSelectedRow();
            
            String Raza = TblRazas.getValueAt(fila, 1).toString();
             String idRaza = TblRazas.getValueAt(fila, 0).toString();
             txtRaza.setText(Raza);
            txtidraza.setText(idRaza);
    }//GEN-LAST:event_TblRazasMouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        limpiar();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
       limpiar();
      String idus=null;
       idus = JOptionPane.showInputDialog(null, "Ingresa ID de Mascota:");
        int Idus=Integer.parseInt(idus);
         txtidu.setText(idus);
        PreparedStatement ps;
            ResultSet rs;
    try {
            Connection con = conexion.getconexion();
            ps = con.prepareStatement("Select*FROM Datos_Mascotas INNER JOIN Tipo_Mascota ON Datos_Mascotas.ID_TMascota = Tipo_Mascota.ID_TMascota LEFT JOIN Raza_Gatos ON Datos_Mascotas.ID_RazaG = Raza_Gatos.ID_Raza_Gatos LEFT JOIN Raza_Perros ON Datos_Mascotas.ID_RazaP = Raza_Perros.ID_Raza_Perros WHERE Datos_Mascotas.ID_Mascota = ?;");
            ps.setInt(1, Idus);
                       
          rs = ps.executeQuery();
            while(rs.next()){
                
           txtNomM.setText(rs.getString("Nombre_Mascota"));
           txtIDu.setText(rs.getString("ID_Dueño_De_Mascota"));
            
           txtcolorM .setText(rs.getString("Color_Mascota"));
          int idTipoMascota = rs.getInt("ID_TMascota");

// Dentro del bucle while(rs.next()), compara el ID_TMascota como un entero.
if(idTipoMascota == 2) {
    rbPerro.setSelected(true);
    txtRaza.setText(rs.getString("Raza_Perro"));
    rbGato.setSelected(true);
    txtRaza.setText(rs.getString("Raza_Gatos"));
} else{
      rbPerro.setSelected(true);
    txtRaza.setText(rs.getString("Raza_Perro"));
    }

        
            txtAtenciones.setText(rs.getString("Atencion_Especial"));
              txtSeñas.setText(rs.getString("Señales_Particulares"));
               
         txtidraza.setText(rs.getString("ID_TMascota"));
               
      

            }
            
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e.toString());
            
        }
    
        
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        String [] opciones = { "Si,estoy seguro", " No", "Cancelar" };
 

String Nombre = txtNomM.getText();
String idus=txtidu.getText();
int Seleccion = JOptionPane.showOptionDialog (null, " Estas seguro de querer modificar el registro de "+Nombre+" ?", "Selecciona una opcion", JOptionPane.YES_NO_CANCEL_OPTION, JOptionPane.INFORMATION_MESSAGE, null/*icono*/, opciones, opciones[0]);
       
        if (Seleccion==0){
           
    
        int idD = Integer.parseInt(txtIDu.getText());
        String Color = txtcolorM.getText();
        String Atenciones  =txtAtenciones.getText();
        
        String senas = txtSeñas.getText();
          int IDT=0;
                String IDP=null;
        String IDG=null;
          String IdR=txtidraza.getText();
     if (rbPerro.isSelected() == true) {
           IDT=1;
           
        IDP = IdR;
        IDG=null;
           
        } else if (rbGato.isSelected() == true) {
            IDT=2;
            IDP=null;
            IDG=IdR;
        } else {
            IDT=1;
            IDP = IdR;
        IDG=null;
        }
        try {
            Connection con = conexion.getconexion();
            PreparedStatement ps = con.prepareStatement("Update Datos_Mascotas set Nombre_Mascota=?,ID_TMascota=?,ID_RazaP=?,ID_RazaG=?,ID_Dueño_De_Mascota=?,Color_Mascota=?,Atencion_Especial=?,Señales_Particulares=? WHERE ID_Mascota=?;");
            ps.setString(1, Nombre);
            ps.setInt(2,IDT );
            ps.setString(3, IDP);
         
            ps.setString(4, IDG);
            ps.setInt(5,idD);
            ps.setString(6, Color);
            ps.setString(7, Atenciones);
            ps.setString(8, senas);
            
           
            ps.setString(9, idus);
            
            ps.executeUpdate();
            JOptionPane.showMessageDialog(null, "Registro Modificado :D");
            limpiar();
       
            
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e.toString());
            
        }
        }
        else{
            JOptionPane.showMessageDialog(null, "Operacion Cancelada ");
             
            limpiar();
          
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
         Menu_Principal abrir =new  Menu_Principal();
       abrir.setVisible(true);
       this.setVisible(false);
    }//GEN-LAST:event_jButton5ActionPerformed

    private void txtidrazaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtidrazaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtidrazaActionPerformed

    
    
    
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Registro_De_Mascotas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Registro_De_Mascotas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Registro_De_Mascotas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Registro_De_Mascotas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Registro_De_Mascotas().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable TblRazas;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JRadioButton rbGato;
    private javax.swing.JRadioButton rbPerro;
    private javax.swing.JTextArea txtAtenciones;
    private javax.swing.JTextField txtBRazas;
    private javax.swing.JTextField txtIDu;
    private javax.swing.JTextField txtNomM;
    private javax.swing.JTextField txtRaza;
    private javax.swing.JTextArea txtSeñas;
    private javax.swing.JTextField txtcolorM;
    private javax.swing.JTextField txtidraza;
    private javax.swing.JTextField txtidu;
    // End of variables declaration//GEN-END:variables
}
